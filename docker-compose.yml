services:
  vpn:
    image: qmcgaw/gluetun
    container_name: vpn
    cap_add:
      - net_admin # required to modify network interfaces
    restart: unless-stopped
    devices:
      - /dev/net/tun:/dev/net/tun
    volumes:
      - /dev/net:/dev/net:z # tun device
    ports:
      - 8080:8080 #qbittorrent frontend port hopefully
    environment:
      - VPN_SERVICE_PROVIDER=mullvad
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}

  qbittorrent:
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:latest
    restart: unless-stopped
    network_mode: service:vpn # run on the vpn network
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    volumes:
      - ${ROOT}/downloads:/downloads # downloads folder
      - ${ROOT}/config/qBittorrent:/config # config files

  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
#       - ${ROOT}/downloads/torrent-blackhole:/downloads # place where to put .torrent files for manual download
# 
      - ${ROOT}/config/jackett:/config # config files

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/config/sonarr:/config # config files
      - ${ROOT}/media/tv:/tv # tv shows folder
      - ${ROOT}/downloads:/downloads # download folder
# 
  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/config/radarr:/config # config files
      - ${ROOT}/media/movies:/movies # movies folder
      - ${ROOT}/downloads:/downloads # download folder
# 
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    cap_add:
      - net_admin      
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      # - JELLYFIN_PublishedServerUrl=http://192.168.0.5 #optional
    network_mode: host
    volumes:
      - ${ROOT}/media/tv:/data/tvshows
      - ${ROOT}/config/jellyfin/library:/config
      - ${ROOT}/media/movies:/data/movies
    # ports:
      # - 8096:8096
      # - 8920:8920 #optional
      # - 7359:7359/udp #optional
      # - 1900:1900/udp #optional
    restart: unless-stopped
# 
  bazarr:
    container_name: bazarr
    image: linuxserver/bazarr
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
      - UMASK_SET=022 #optional
    volumes:
      - ${ROOT}/config/bazarr:/config # config files
      - ${ROOT}/media/movies:/movies # movies folder
      - ${ROOT}/media/tv:/tv # tv shows folder
      
  mylar3:
    container_name: mylar3
    image: linuxserver/mylar3:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${ROOT}/config/mylar3:/config
      - ${ROOT}/downloads:/downloads
      - ${ROOT}/media/comics:/comics

  homarr:
    image: ghcr.io/homarr-labs/homarr:latest
    container_name: homarr
    # network_mode: host
    environment:
      - TZ=${TZ}
      # - PUID=${PUID}
      # - PGID=${PGID}
      - SECRET_ENCRYPTION_KEY=${SECRET_ENCRYPTION_KEY}
    ports:
      - 7575:7575
    volumes:
      # - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration
      - ${ROOT}/config/homarr/appdata:/appdata
    restart: unless-stopped

  # homer:
  #   image: b4bz/homer
  #   container_name: homer
  #   volumes:
  #     - ${ROOT}/config/homer:/www/assets # Make sure your local config directory exists
  #   # environment:
  #     # - PORT: 8081
  #   ports:
  #     - 8081:8081
  #   user: 1000:1000 # default
  #   environment:
  #     - INIT_ASSETS=1 # default, requires the config directory to be writable for the container user (see user option)
  #     - PORT=8081
  #   restart: unless-stopped
